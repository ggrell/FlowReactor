// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.siteUrl = "https://github.com/ggrell/FlowReactor"
    ext.gitUrl = "https://github.com/ggrell/FlowReactor.git"

    ext.buildConfig = [
        minSdk    : 21,
        compileSdk: 31,
        targetSdk : 31
    ]

    ext.versions = [
        kotlin          : '1.5.31',
        kotlinCoroutines: '1.5.2',
        flowBinding     : "1.0.0",
        lifecycle       : '2.4.0',

        // Testing
        jacoco          : '0.8.7',
        mockk           : "1.10.2",
        kluent          : "1.68",
        detekt          : "1.19.0"
    ]

    ext.deps = [
        junit   : 'junit:junit:4.13',

        kotlin  : [
            stdlib    : [
                common: "org.jetbrains.kotlin:kotlin-stdlib-common:${versions.kotlin}",
                jdk   : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
            ],
            test      : [
                common     : "org.jetbrains.kotlin:kotlin-test-common:${versions.kotlin}",
                annotations: "org.jetbrains.kotlin:kotlin-test-annotations-common:${versions.kotlin}",
                jvm        : "org.jetbrains.kotlin:kotlin-test:${versions.kotlin}",
                junit      : "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
                reflect    : "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}",
            ],
            coroutines: [
                core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinCoroutines}",
                native : "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:${versions.kotlinCoroutines}",
                android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinCoroutines}",
                test   : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.kotlinCoroutines}",
            ],
        ],

        bindings: [
            lifecycle: "io.github.reactivecircus.flowbinding:flowbinding-lifecycle:${versions.flowBinding}",
            activity : "io.github.reactivecircus.flowbinding:flowbinding-activity:${versions.flowBinding}",
            android  : "io.github.reactivecircus.flowbinding:flowbinding-android:${versions.flowBinding}",
        ],

        support : [
            core            : "androidx.core:core-ktx:1.2.0",
            annotations     : "androidx.annotation:annotation:1.1.0",
            fragment        : "androidx.fragment:fragment-ktx:1.2.4",
            appcompat       : "androidx.appcompat:appcompat:1.1.0",
            activity        : "androidx.activity:activity-ktx:1.1.0",
            design          : "com.google.android.material:material:1.2.1",
            constraintlayout: 'androidx.constraintlayout:constraintlayout:1.1.3',
            lifecycle       : [
                runtime  : "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}",
                viewModel: "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}",
            ],
        ],

        mockk   : "io.mockk:mockk:${versions.mockk}",
        kluent  : "org.amshove.kluent:kluent:${versions.kluent}",
    ]

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.19.0"
    id "org.jetbrains.dokka" version "1.6.0"
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    apply plugin: "maven-publish"
    apply plugin: "signing"

    group = "com.gyurigrell"
    def isRelease = Boolean.valueOf(project.hasProperty("release") ? project.property("release") as String : "false")
    version = "0.9.1" + (isRelease ? "" : "-SNAPSHOT")

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/ggrell/FlowReactor")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
                }
            }
            maven {
                name = "MavenCentralSnapshots"
                url = uri("https://oss.sonatype.org/content/repositories/snapshots")
                credentials {
                    username = project.findProperty("ossrh.username")
                    password = project.findProperty("ossrh.password")
                }
            }
            maven {
                name = "MavenCentralReleases"
                url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2")
                credentials {
                    username = project.findProperty("ossrh.username")
                    password = project.findProperty("ossrh.password")
                }
            }
        }
    }
}
