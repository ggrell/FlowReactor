// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.buildConfig = [
            minSdk    : 21,
            compileSdk: 28,
            targetSdk : 28
    ]

    ext.versions = [
            kotlin          : '1.4.20',
            kotlinCoroutines: '1.4.1',
            dokka           : '0.9.18',
            flowBinding     : "1.0.0-beta02",

            // Testing
            mockk           : "1.10.2",
            kluent          : "1.60",
            detekt          : "1.15.0-RC1"
    ]

    ext.deps = [
            junit   : 'junit:junit:4.13',

            kotlin  : [
                    stdlib    : [
                            common: "org.jetbrains.kotlin:kotlin-stdlib-common:${versions.kotlin}",
                            jdk   : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
                    ],
                    test      : [
                            common     : "org.jetbrains.kotlin:kotlin-test-common:${versions.kotlin}",
                            annotations: "org.jetbrains.kotlin:kotlin-test-annotations-common:${versions.kotlin}",
                            jvm        : "org.jetbrains.kotlin:kotlin-test:${versions.kotlin}",
                            junit      : "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
                            reflect    : "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}",
                    ],
                    coroutines: [
                            core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinCoroutines}",
                            native : "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:${versions.kotlinCoroutines}",
                            android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinCoroutines}",
                            test   : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.kotlinCoroutines}",
                    ],
            ],

            bindings: [
                    lifecycle: "io.github.reactivecircus.flowbinding:flowbinding-lifecycle:${versions.flowBinding}",
                    activity : "io.github.reactivecircus.flowbinding:flowbinding-activity:${versions.flowBinding}",
                    android  : "io.github.reactivecircus.flowbinding:flowbinding-android:${versions.flowBinding}",
            ],

            support : [
                    core            : "androidx.core:core-ktx:1.2.0",
                    lifecycle       : "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0",
                    annotations     : "androidx.annotation:annotation:1.1.0",
                    fragment        : "androidx.fragment:fragment-ktx:1.2.4",
                    appcompat       : "androidx.appcompat:appcompat:1.1.0",
                    activity        : "androidx.activity:activity-ktx:1.1.0",
                    design          : "com.google.android.material:material:1.2.1",
                    viewModel       : 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0',
                    constraintlayout: 'androidx.constraintlayout:constraintlayout:1.1.3',
            ],

            mockk   : "io.mockk:mockk:${versions.mockk}",
            kluent  : "org.amshove.kluent:kluent:${versions.kluent}",
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$versions.dokka"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$versions.dokka"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

plugins {
    id("io.gitlab.arturbosch.detekt").version("1.15.0-RC1")
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    group = "com.gyurigrell"
    def isRelease = Boolean.valueOf(project.hasProperty("release") ? project.property("release") as String : "false")
    version = "0.9.0" + (isRelease ? "" : "-SNAPSHOT")

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}
